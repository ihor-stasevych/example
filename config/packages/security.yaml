security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
               users:
                   igor:
                       password: test
                       roles: 'ROLE_USER'
                   admin:
                       password: test
                       roles: 'ROLE_ADMIN'
        addhash.user_provider:
          id: addhash.user_provider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: addhash.user_provider
            guard:
                authenticators:
                    - addhash.user_authentificator
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure


        api_user_register:
              pattern: ^/api/v1/user/register
              anonymous: true
              security: false

        api_public_store_category:
              pattern: ^/api/v1/store/category
              anonymous: true
              security: false

        api_public_store_product_list:
              pattern: ^/api/v1/store/products
              anonymous: true
              security: false

        api_public_promo_contact_create:
              pattern: ^/api/v1/promo/contact
              anonymous: true
              security: false

        api_public_crypto_callback:
              pattern: ^/api/v1/payments/crypto/callback
              anonymous: true
              security: false

        api_public_crypto_state:
              pattern: ^/api/v1/payments/crypto/state
              anonymous: true
              security: false

        api_doc:
              pattern: ^/api/doc
              anonymous: true
              security: false

        api:
            pattern:   ^/api
            stateless: true
            provider: addhash.user_provider
            guard:
                authenticators:
                     - addhash.user_authentificator

        api_admin:
            pattern:   ^/api/v1/admin
            stateless: true
            provider: addhash.user_provider
            guard:
                authenticators:
                     - addhash.user_authentificator
                     #- lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used

    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_MANAGER: ROLE_USER
        ROLE_ADMIN: ROLE_MANAGER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    encoders:
      Symfony\Component\Security\Core\User\User: plaintext
      App\AddHash\AdminPanel\Domain\User\User:
         algorithm: bcrypt
         cost: 12

    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/admin,  roles: ROLE_ADMIN }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
